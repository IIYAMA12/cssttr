:root {
    --main-color: #ffaf00;
    --main-color-shadow: rgba(255, 175, 0, 0.7);
    --main-color-gray1: #e1e1e1;
    --secondary-color: #282828;
    --disabled-color: #a8a8a8;
    --global-border-radius: 0.3rem;
    --global-background-color: #F5F5F5;
    --global-box-shadow: 1px 1px 2px -1px rgba(0, 0, 0, 0.32);
}

/* CSS varianbles: https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables */
body {
    font-family: Ampersand, sans-serif;
}

/* 6.32/6.33
* De-emphasize
* by blurring & dimming
*/
dialog {
    position: fixed;
    max-width: 90vw;
    max-width: min-content;
    top: 0;
    margin: 50vh 0 0 50vw;
    transform: translateY(-50%);
    transform: translateX(-50%);
    background-color: white;
    border-radius: var(--global-border-radius);
    padding: 1rem;
    box-sizing: border-box;
    background: #7e7e7e;
    background-image: linear-gradient(90deg, #d3d3d3 23px, transparent 0), linear-gradient(90deg, #a8a8a8 11px, transparent 0), linear-gradient(90deg, #bdbdbd 41px, transparent 0);
    background-size: 41px 100%, 61px 100%, 83px 100%, 41px 100%;
}

dialog:focus-within {
    border: 1px solid rgba(255, 175, 0, 0.5);
    box-shadow: 1px 1px 2px -1px rgba(0, 0, 0, 0.32);
    z-index: 100;
}

dialog:focus {
    outline: 0;
    border: 1px solid #ffaf00;
    box-shadow: 1px 1px 2px -1px var(--main-color-shadow);
}

dialog:not(:focus-within) {
    visibility: hidden;
}

dialog:focus-within ~ * {
    transition: filter 0.1s;
    filter: blur(2px) contrast(0.4) brightness(0.4);
    opacity: 0.4;
}

dialog h1, dialog p {
    margin-bottom: 1rem;
    width: inherit;
}

/*

    https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors
    https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors
    https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_selectors
    https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_selectors

*/
#debug-viewport:after {
    content: "mobile";
    color: red;
    position: fixed;
    top: 0;
    z-index: 1000;
    font-size: 2rem;
}

@media (min-width: 40rem) and (max-width: 80rem) {
    #debug-viewport:after {
        content: "tablet";
    }
}

@media (min-width: 60em) {
    #debug-viewport:after {
        content: "desktop";
    }
}

h1 {
    font-family: 'Fira Sans', sans-serif;
}

h1 a {
    font-family: inherit;
    color: inherit;
}

textarea {
    margin: 0;
    border-radius: var(--global-border-radius);
    border: 1px solid var(--main-color-gray1);
    padding: 0.5rem;
}

textarea:focus {
    border: 1px solid var(--main-color);
}

input[type="email"], input[type="password"] {
    border-radius: var(--global-border-radius);
    border: 1px solid var(--main-color-gray1);
}

input[type="email"]:focus, input[type="password"]:focus {
    border: 1px solid var(--main-color);
}

/* FRAME-BY-FRAME ANIMATIONS */
@keyframes loader {
    to {
        background-position: -40rem 0;
    }
}

[aria-label="loader"] {
    pointer-events: none;
    position: fixed;
    top: 0;
    margin: 50vh 0 0 50vw;
    transform: translateY(-50%) translateX(-50%);
    width: 5rem;
    height: 5rem;
    background: url("../images/loader.svg") 0 0;
    background-repeat: no-repeat;
    background-size: cover;
    animation: loader 1s infinite steps(8);
    /* Hide text */
    text-indent: 200%;
    white-space: nowrap;
    overflow: hidden;
    border-radius: 1rem;
}

/* Extending the clickable area */
button {
    border-radius: 1.3rem;
    border: none;
    background-color: var(--secondary-color);
    color: white;
    min-height: 1rem;
    padding: 0.5rem;
    font-size: 1rem;
    line-height: 1rem;
    border: 1em solid transparent;
    background-clip: padding-box;
    box-sizing: content-box;
    margin-left: -1em;
    margin-top: -1em;
    cursor: pointer;
    box-shadow: 0 0 0 0px transparent inset, 0 0em 0em 0em transparent;
}

button:focus {
    outline: 0;
}

button:focus, button:hover {
    color: white;
    background-color: var(--main-color);
    transition: box-shadow 0.7s, background-color 0.3s;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3) inset, 0 0.1em 0.2em -0.05em rgba(0, 0, 0, 0.5);
}

button[aria-disabled="true"], button[disabled], button:disabled {
    background-color: var(--disabled-color);
}

/* 6.29 Picking the right cursor */
[aria-disabled="true"], [disabled], :disabled {
    cursor: not-allowed;
}

input[type="email"], input[type="password"] {
    border-radius: var(--global-border-radius);
    border: 1px solid var(--main-color-gray1);
    padding: 0.5em;
}

input[type="email"]:valid[used], input[type="password"]:valid[used] {
    background: url("../images/valid.svg") no-repeat;
}

input[type="email"]:not(:valid)[used], input[type="password"]:not(:valid)[used] {
    background: url("../images/invalid.svg") no-repeat;
}

input[type="email"]:valid[used], input[type="email"]:not(:valid)[used], input[type="password"]:valid[used], input[type="password"]:not(:valid)[used] {
    background-position: right;
    background-size: 1.7rem;
}

@keyframes line-move-effect {
    0% {
        background-position: 0em 1.4rem;
    }
    100% {
        background-position: 10rem 1.4rem;
    }
}

a:focus, a:hover {
    outline: 0;
    animation: line-move-effect 20s infinite;
    color: var(--main-color);
    text-decoration: none;
    background: linear-gradient(90deg, var(--main-color) 66%, transparent 0) repeat-x;
    background-size: 1rem 1px;
    background-position: 0 1.4rem;
}

nav a:focus, nav a:hover {
    background: initial;
}

/* body, header with navigation */
body {
    height: 100vh;
    background-color: var(--global-background-color);
}

body > header {
    background-color: var(--secondary-color);
    color: white;
    height: 3rem;
    width: 100vw;
}

@media (max-width: 40rem) {
    body > header {
        display: grid;
        grid-template-columns: 60% 40%;
        position: fixed;
        z-index: 100;
        height: 3rem;
        top: 0;
        left: 0;
    }
}

@media (min-width: 40rem) {
    body > header {
        position: relative;
        display: grid;
        grid-template-columns: 18rem auto;
        height: 3rem;
        margin-bottom: 2rem;
    }
}

body > header > h1 {
    font-size: 1.5em;
    width: 100%;
    line-height: 3rem;
    padding: 0 0 0 1rem;
}

@media (min-width: 40rem) {
    body > header > h1 {
        padding: 0 0 0 1.25rem;
        line-height: 3rem;
    }
}

body > header nav {
    height: inherit;
}

@media (max-width: 40rem) {
    body > header nav h1 {
        text-align: right;
        line-height: 3rem;
        height: 3rem;
        padding: 0 1rem 0 0;
    }
}

@media (min-width: 40rem) {
    body > header nav h1 {
        display: none;
        visibility: hidden;
    }
}

@media (max-width: 40rem) {
    body > header nav > ul {
        transition: transform 1s;
        transform: translateX(100%);
        pointer-events: none;
    }
    body > header nav:focus-within > ul, body > header nav:focus > ul {
        transform: translateX(0%);
        pointer-events: initial;
    }
}

body > header nav > ul {
    border-radius: 0 0 0 var(--global-border-radius);
}

@media (max-width: 40rem) {
    body > header nav > ul {
        background-color: var(--main-color);
        box-shadow: -2px 2px 5px 0px rgba(0, 0, 0, 0.2);
    }
    body > header nav > ul > li:last-child a {
        border-radius: 0 0 0 var(--global-border-radius);
    }
}

@media (min-width: 40rem) {
    body > header nav > ul {
        display: flex;
        height: 3rem;
    }
}

body > header li {
    display: block;
}

@media (max-width: 40rem) {
    body > header li {
        min-height: 2rem;
        line-height: 2rem;
    }
    body > header li:not(:first-of-type) {
        border-top: 1px solid white;
    }
    body > header li:focus-within + li {
        border: none;
    }
}

body > header a {
    display: block;
}

@media (max-width: 40rem) {
    body > header a {
        transition: padding 0.25s;
        padding: 1rem;
        box-sizing: border-box;
    }
}

body > header a:focus, body > header a:hover {
    background-color: white;
    color: black;
    outline: 0;
}

@media (max-width: 40rem) {
    body > header li li {
        transition: margin 0.25s;
        margin: 0 1rem;
    }
    body > header li li:focus-within, body > header li li:hover {
        margin: 0;
    }
    body > header li li:focus-within a, body > header li li:hover a {
        padding: 0.5rem 0 0.5rem 1.5rem;
    }
}

@media (min-width: 40rem) {
    body > header li {
        position: relative;
        line-height: calc(3rem - 2rem);
        box-sizing: border-box;
        font-size: 1em;
    }
    body > header li a {
        padding: 1rem 1.5rem;
    }
    body > header li a:focus, body > header li a:hover {
        background-color: var(--main-color);
        color: white;
    }
    body > header li ul {
        border-radius: 0 0 var(--global-border-radius) var(--global-border-radius);
        visibility: hidden;
        display: none;
        background-color: var(--main-color);
        left: 0;
        position: absolute;
        width: 100%;
        box-shadow: -2px 3px 5px 0px rgba(0, 0, 0, 0.2);
    }
    body > header li ul li:last-of-type a {
        border-radius: 0 0 var(--global-border-radius) var(--global-border-radius);
    }
    body > header li li a {
        display: block;
        height: 100%;
    }
    body > header li li a:focus, body > header li li a:hover {
        background-color: white;
        color: var(--main-color);
    }
    body > header li:focus-within ul {
        visibility: visible;
        display: initial;
    }
}

body > header a {
    color: white;
    text-decoration: none;
}

/* ----------------------- */
@keyframes follow-the-image {
    0% {
        transform: scale(1) translate(0%, 0%);
    }
    10% {
        transform: scale(0.8) translate(0%, 0%);
    }
    20% {
        transform: scale(0.6) translate(30%, 30%);
    }
    30% {
        transform: scale(0.4) translate(-40%, -40%);
    }
    40% {
        transform: scale(0.2) translate(40%, 40%);
    }
    50% {
        transform: scale(0.1) translate(100%, 30%);
    }
    60% {
        transform: scale(0.07) translate(100%, 100%);
    }
    70% {
        transform: scale(0.07) translate(-120%, -120%);
    }
    73% {
        transform: scale(0.07) translate(-120%, -120%);
    }
    80% {
        transform: scale(0.06) translate(50%, 50%);
    }
    85% {
        transform: scale(0.06) translate(70%, 70%);
    }
    90% {
        transform: scale(0.03) translate(50%, 50%);
    }
    100% {
        transform: scale(1) translate(0%, 0%);
    }
}

img:hover, img:focus {
    border: 1px solid #ffaf00;
    animation: follow-the-image 20s cubic-bezier(0, 0.33, 0.78, 0.27) infinite;
}

/* main and content wrappers */
main {
    box-sizing: border-box;
    display: grid;
    grid-template-columns: 100%;
    justify-content: space-between;
    grid-column-gap: 1rem;
    grid-row-gap: 1rem;
}

@media (min-width: 40rem) and (max-width: 80rem) {
    main {
        width: 60em;
        max-width: 100vw;
        margin: auto;
    }
}

@media (min-width: 80rem) {
    main {
        width: 75em;
        max-width: 100vw;
        margin: auto;
    }
}

@media (max-width: 40rem) {
    main {
        margin-top: 3rem;
    }
}

@media (min-width: 40rem) {
    main {
        padding: 0 1rem 1rem 1rem;
    }
}

@media (min-width: 40rem) and (max-width: 80rem) {
    main {
        grid-template-columns: calc(50% - 0.5rem) calc(50% - 0.5rem);
    }
}

@media (min-width: 80rem) {
    main {
        grid-template-columns: calc(33.3% - 0.6667rem) calc(33.3% - 0.6667rem) calc(33.3% - 0.6667rem);
    }
}

main > * {
    border-radius: 0;
    transition: border-radius 2s, transform 2s, opacity 2s;
    padding: 1rem;
    background-color: #ffffff;
    border: 1px solid #EBEBEB;
    box-shadow: 1px 1px 2px -1px rgba(0, 0, 0, 0.32);
    transition: box-shadow 0.7s;
}

@keyframes content-load-animation-right-to-left {
    0% {
        transform: translateX(50%);
        opacity: 0;
    }
    50% {
        transform: translateX(50%);
        opacity: 0;
    }
    100% {
        transform: translateX(0%);
        opacity: 1;
    }
}

@keyframes content-load-animation-left-to-right {
    0% {
        transform: translateX(-50%);
        opacity: 0;
    }
    50% {
        transform: translateX(-50%);
        opacity: 0;
    }
    100% {
        transform: translateX(0%);
        opacity: 1;
    }
}

@keyframes content-load-animation-bottom-to-top {
    0% {
        transform: translateY(50%);
        opacity: 0;
    }
    50% {
        transform: translateY(50%);
        opacity: 0;
    }
    100% {
        transform: translateX(0%);
        opacity: 1;
    }
}

@media (max-width: 80rem) {
    main > *:nth-child(even) {
        animation: content-load-animation-right-to-left 2s cubic-bezier(0.22, 0.51, 0.46, 0.76);
    }
    main > *:nth-child(odd):not(:last-child) {
        animation: content-load-animation-left-to-right 2s cubic-bezier(0.22, 0.51, 0.46, 0.76);
    }
    main > *:nth-child(odd):last-child {
        animation: content-load-animation-bottom-to-top 2s cubic-bezier(0.22, 0.51, 0.46, 0.76);
    }
}

@media (min-width: 80rem) {
    main > * {
        animation: content-load-animation-right-to-left 2s cubic-bezier(0.22, 0.51, 0.46, 0.76);
    }
    main > *:nth-child(3n+1) {
        animation: content-load-animation-left-to-right 2s cubic-bezier(0.22, 0.51, 0.46, 0.76);
    }
}

@media (min-width: 40rem) {
    main > * {
        border-radius: var(--global-border-radius);
    }
}

@media (min-width: 40rem) and (max-width: 80rem) {
    main > *:last-child:nth-child(odd) {
        grid-column-start: 1;
        grid-column-end: 3;
    }
}

@media (min-width: 80rem) {
    main > *:last-child:nth-child(odd) {
        grid-column-start: 2;
        grid-column-end: 4;
    }
}

main > * h1 {
    font-size: 1.5em;
    margin-bottom: 1rem;
}

main > *:focus-within {
    border: 1px solid rgba(255, 175, 0, 0.5);
    box-shadow: 4px 4px 5px -1px rgba(0, 0, 0, 0.3);
}

main > *:focus {
    outline: 0;
    border: 1px solid #ffaf00;
}

main > * img {
    width: 100%;
}

/* ----------------------- */
/* default article */
main > article img {
    margin-bottom: 1rem;
}

main > article p {
    line-height: 1.2em;
}

main > article figcaption footer {
    border-top: 1px solid black;
    margin-top: 1rem;
    padding-top: 1rem;
}

/* ----------------------- */
/* ----------------------- */
/* Finish your order */
/* rating */
main > nav progress {
    width: 100%;
    height: 1rem;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-color: #ebebeb;
    border-radius: 5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1) inset;
    overflow: hidden;
}

main > nav progress::-webkit-progress-value {
    background-color: var(--secondary-color);
}

main > nav ol {
    display: flex;
    grid-template-columns: auto;
    flex-wrap: wrap;
    margin: 2rem 0 2rem 0;
}

main > nav ol:focus-within li, main > nav ol:hover li {
    height: 2rem;
    line-height: 2rem;
}

main > nav ol:focus-within li:focus-within, main > nav ol:focus-within li:hover, main > nav ol:hover li:focus-within, main > nav ol:hover li:hover {
    height: 3rem;
    line-height: 3rem;
}

main > nav ol li {
    transition: height 0.5s cubic-bezier(0.89, 0.03, 0.89, 0.71), line-height 0.5s cubic-bezier(0.89, 0.03, 0.89, 0.71);
    flex-grow: 1;
    height: 3rem;
    line-height: 3rem;
    text-align: center;
    border: 1px solid var(--main-color-gray1);
    border-radius: var(--global-border-radius);
    display: block;
    margin-bottom: 1rem;
}

main > nav ol li:last-of-type {
    margin-bottom: 0;
}

@media (max-width: 40rem) {
    main > nav ol li {
        width: 100%;
    }
}

@media (min-width: 40rem) {
    main > nav ol li {
        width: 50%;
    }
}

main > nav ol a {
    display: block;
    color: black;
    text-decoration: none;
}

main > nav form {
    padding: 1rem;
    margin-bottom: 1rem;
    background-color: #ebebeb;
    border-radius: var(--global-border-radius);
    border: 1px solid var(--main-color-gray1);
}

main > nav form fieldset {
    display: flex;
    position: relative;
}

main > nav form fieldset legend {
    margin-bottom: 1rem;
    width: 100%;
    font-size: 1.3em;
}

@keyframes jumping-smiley {
    0% {
        transform: translateY(0rem) rotate(0deg);
    }
    50% {
        transform: translateY(-0.5rem) rotate(180deg);
    }
    100% {
        transform: translateY(0rem) rotate(0deg);
    }
}

@keyframes jumping-smiley-text {
    40% {
        transform: translateY(0rem) rotate(0deg);
    }
    50% {
        transform: translateY(0.5rem) rotate(30deg);
    }
    40% {
        transform: translateY(0rem) rotate(0deg);
    }
}

input[name="rating"] {
    overflow: hidden;
    opacity: 0;
    position: absolute;
}

input[name="rating"] + label {
    opacity: 0.5;
    display: block;
    flex-grow: 1;
    position: relative;
    text-align: center;
    height: 4rem;
    width: 1rem;
    flex-grow: 1;
    flex-shrink: 1;
    text-align: center;
}

input[name="rating"]:focus + label, input[name="rating"]:hover + label {
    color: var(--main-color);
}

input[name="rating"]:focus + label, input[name="rating"]:hover + label {
    animation: jumping-smiley-text 1.5s cubic-bezier(0, 0.33, 0.78, 0.27) infinite;
}

input[name="rating"]:focus + label svg, input[name="rating"]:hover + label svg {
    animation: jumping-smiley 1.5s cubic-bezier(0, 0.33, 0.78, 0.27) infinite;
}

input[name="rating"]:focus + label, input[name="rating"]:checked + label, input[name="rating"]:hover + label {
    opacity: 1;
}

input[name="rating"] + label svg {
    width: 2rem;
    position: absolute;
    bottom: 0;
    left: calc(50% - 1rem);
}

/* ----------------------- */
/* chat */
section > ol {
    padding: 1em;
    background-color: #ebebeb;
    border: 1px solid #e1e1e1;
    margin-bottom: 1em;
    border-radius: var(--global-border-radius);
}

section > ol li {
    display: block;
    margin-top: 0.7em;
}

section > ol li > p {
    margin-bottom: 0.5em;
}

section > ol li:not(:last-of-type) {
    padding-bottom: 0.7em;
    border-bottom: 1px solid black;
}

section > ol p {
    display: block;
}

section > ol footer {
    font-size: 0.9em;
    font-weight: lighter;
    display: grid;
    grid-template-columns: auto auto;
}

section > ol footer p[data-status] {
    text-align: right;
}

section > form {
    display: grid;
    grid-template-columns: auto 50% 20%;
    grid-template-rows: 2rem;
    grid-column-gap: 5%;
}

section > form:focus-within textarea {
    height: 5rem !important;
}

@media (max-width: 40rem), (min-width: 80rem) {
    section > form textarea {
        grid-column-start: 2;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 10;
    }
}

@media (min-width: 40rem) and (max-width: 80rem) {
    section > form {
        grid-column-gap: 1rem;
        grid-template-columns: calc(80% - 1rem) 20%;
        grid-template-rows: 1.5rem 3rem;
    }
    section > form label {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
    }
    section > form textarea {
        grid-column-start: 1;
        grid-row-start: 2;
        grid-row-end: 2;
    }
    section > form button {
        grid-column-start: 2;
        grid-row-start: 2;
    }
}

section > form label {
    line-height: 2rem;
}

@media (min-width: 40rem) and (max-width: 80rem) {
    section > form label {
        line-height: 1rem;
    }
}

section > form textarea {
    height: 2rem !important;
    transition: height 0.3s;
    resize: none;
    box-sizing: border-box;
}

/* ----------------------- */
/* login */
main > form[method="post"] {
    display: grid;
    grid-template-columns: 50% 50%;
}

main > form[method="post"] label {
    display: block;
}

main > form[method="post"] label:nth-of-type(1), main > form[method="post"] label:nth-of-type(2) {
    margin-bottom: 0.5rem;
}

main > form[method="post"] [type="email"], main > form[method="post"] [type="password"] {
    grid-column-start: 1;
    grid-column-end: 3;
    height: 2rem;
    margin-bottom: 1rem;
    box-sizing: border-box;
}

main > form[method="post"] [type="checkbox"] {
    margin: 0;
    grid-column-start: 1;
    grid-row-start: 5;
    width: 1.2rem;
    height: 1.2rem;
    margin: 0.4rem 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: 1px solid var(--main-color-gray1);
    border-radius: var(--global-border-radius);
    margin-bottom: 1rem;
    background-color: white;
    transition: background-color 0.4s;
}

main > form[method="post"] [type="checkbox"]:checked {
    background: var(--main-color) url("../images/checked.svg") no-repeat;
    border: none;
}

main > form[method="post"] [type="checkbox"]:focus + label {
    color: var(--main-color);
}

main > form[method="post"] [type="checkbox"] + label {
    grid-column-start: 1;
    grid-row-start: 5;
    height: 2em;
    line-height: 2rem;
    margin-left: 2rem;
}

main > form[method="post"] [type="submit"] {
    grid-column-start: 1;
    grid-column-end: 3;
    margin-bottom: 1rem;
    width: calc(100% - 1rem);
}

main > form[method="post"]:not(:valid) [type="submit"] {
    background-color: var(--disabled-color);
    cursor: not-allowed !important;
}
